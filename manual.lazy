LzTeX Manual
============
Nattawut Phetmak <neizod@gmail.com>


Welcome
=======

LzTeX (pronounce: /ˈleɪzitɛk/, lazy-tex) is a markdown-style for LaTeX.
Since I'm so lazy (according to this project's name), I'll not write this manual a lot.

This manual is also written in LzTeX, you can peek into the source and learn from there.

You might want to take a look at <http://daringfireball.net/projects/markdown/syntax> and <https://code.google.com/p/ezmath/wiki/Quick_Syntax_Guide> for more information on syntax guildline. Just beware of some little detail in difference.

The Document
------------

LaTeX document **must** start with article name, follow by the underline, and end with the author name, like:

``` ```

```LzTeX Manual```

```============```

```Nattawut Phetmak```

``` ```

- To underline a line of text. Make 1 newline, write down `====` or `----` as much as you want, and finally end it with another 1 newline.
- 1 newline won't do a newline in a rendered document. Use 2 newline for a new paragraph (there is no option for just newline yet).
- Use `* ... *` (with number of star from 1 to 3) to wrap some text, it will appear as emphasis text.
- Use `` ` ... ` `` for code. If you want \` inside it, just increase the number of opening and closing \`, like ``` `` ` `` ```.
- For autolink, wrap url\/e-mail with `<...>`.
- To spell some word, wrap the phonetic alphabets inside `/.../`, like /ˈleɪzitɛk/ (this feature is not yet fully support).
- Itemize with symbol `-` at the begin of the line, follow by some space, and then the item.
- Not Yet Avaliable: multiline code, blockquote, horizontal rule, page break.


Mathematics
-----------

To use EzMath, wrap mathematics sentence inside `$ ... $`, you may put newline before and after it to make it render as a displayed math.

$ L = - 1/(16pi) (der^mu A^nu - der^nu A^mu)(der[mu] A[v] - der[nu] A[mu]) + (m^2c^2)/(8pi hbar^2) A^nu A[nu] $

- Any symbol to our sense will be parse to it, `*` is $*$. If you need `*` in math, escape them like `\*` to produce $\*$.
- Indexing some element like `phi[1]` to produce $phi[1]$. And Power it like `e^pi` to produce $e^pi$.
- Fraction with `up/down`. If there is a complex part, parenthesize them, such as `(alpha+beta+gamma)/(A+B+C)` is $(alpha+beta+gamma)/(A+B+C)$.
- There is some function-bracket call, like `floor(2....428571...)` will be shown as $floor(2....428571...)$, check out for all function names in the source!
- Matrix must be wrap by `[ ... ]` such as `[1,2;3,4]` is $[1,2;3,4]$. Make sure there is some space before it, otherwise it will parse as indexing.
- Intregral with keyword `integral`, then end with the integral boundary, such as `integral x^2 dx from 0 to 10`, this will be render as $integral x^2 dx from 0 to 10$.
- Not Yet Avaliable: function name (sin cos tan), procedure (if else while).


Using `lztex.py`
-----------

To fully use the program, you need

- Python 2.7 or Python 3.2 (or higher)
- Program that can make PDF from tex file (texlive, miktex)

Then, inside the program's directory, invoke program with

``` ```

```python lztex.py```

``` ```

or just

``` ```

```./lztex.py```

``` ```

You will be bring into the program's shell. Type in the document here. Whene you finish it, hit `^C` (`ctrl + C`) to see result. Hit it again to quit.

You can also write a file containing LzTeX's style document (should be end with extension `.lazy`), and let `lztex.py` parse it to LaTeX by

``` ```

```./lztex.py filename.lazy```

``` ```

New file `filename.tex` will be created (make sure you don't have this file name before, cause it will be overwritten). Then you can make PDF from it.

